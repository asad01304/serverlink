#!/bin/bash

error()
{
	echo "ERROR: $@" >&2
	echo "FAIL"
	RESULT=1
	exit 1
}

warning()
{
	echo "WARNING: $@" >&2
}

if [ -z "$SSH_ORIGINAL_COMMAND" ]; then
        [ -z "$1" ] && error "Usage: $0 [+|-]ACCOUNT:CLIENT_ID"
        SSH_ORIGINAL_COMMAND="$@"
fi

unquote()
{
	local _S
	_S="${1//[^\"]}"
	if [ ${#_S} -ge 2 ]; then
		_S=$(echo -n "$1" | sed 's,^[[:space:]]*"\(.*\)"[[:space:]]*$,\1,')
	fi
	echo -n "$_S"
}

# let's configure ourselves (it's a bit unreliable with the log dir)
HTTPD_ROOT=$(httpd -V 2>/dev/null | fgrep HTTPD_ROOT= | cut -f2 -d=)
HTTPD_CONFFILE=$(httpd -V 2>/dev/null | fgrep SERVER_CONFIG_FILE= | cut -f2 -d=)
HTTPD_LOGDIR=$(httpd -V 2>/dev/null | fgrep DEFAULT_ERRORLOG= | cut -f2 -d=)
# ... Apache could embrace the values with double quotes, let's remove them
HTTPD_ROOT=$(unquote $HTTPD_ROOT)
HTTPD_CONFFILE=$(unquote $HTTPD_CONFFILE)
HTTPD_LOGDIR=$(unquote $HTTPD_LOGDIR)
HTTPD_LOGDIR="${HTTPD_LOGDIR%/*}"
# the config file path may be absolute or relative
[ "${HTTPD_CONFFILE:0:1}" != '/' ] && HTTPD_CONFFILE="$HTTPD_ROOT/$HTTPD_CONFFILE"
# the logs dir path may be absolute or relative
HTTPD_LOGDIR_ABS="$HTTPD_LOGDIR"
[ "${HTTPD_LOGDIR:0:1}" != '/' ] && HTTPD_LOGDIR_ABS="$HTTPD_ROOT/$HTTPD_LOGDIR"

# well, now check that all of the above is good
[ -z "$HTTPD_ROOT" -o -z "$HTTPD_CONFFILE" -o -z "$HTTPD_LOGDIR_ABS" \
	-o ! -d "$HTTPD_ROOT" -o ! -d "$HTTPD_LOGDIR_ABS" -o ! -s "$HTTPD_CONFFILE" ] &&
	error "Could not get the configuration information from Apache!"

# at this stage we know where is Apache and its config files, so let's
# source our configuration files from there...
[ -s "${HTTPD_CONFFILE%/*}/manage-svn.conf" ] && . "${HTTPD_CONFFILE%/*}/manage-svn.conf"

# now check that the essential pieces are defined
[ -z "$SVN_HOME" ] && SVN_HOME=/home
[ -z "$LAST_PORT_FILE" ] && LAST_PORT_FILE="${HTTPD_CONFFILE%/*}/svn-clients.port"

BUFFER="$SSH_ORIGINAL_COMMAND"

ACCOUNT="${BUFFER%%:*}"
MODE="${ACCOUNT:0:1}"
[ -n "$MODE" ] || error "No account was specified, please check the usage!"
[ "$MODE" == '+' -o "$MODE" == '-' ] || error "Unknown mode '$MODE' was specified, bailing out!"
ACCOUNT="${ACCOUNT:1}"
[ -n "$ACCOUNT" -a ${#ACCOUNT} -le 6 -a "${ACCOUNT:0:2}" != 's_' ] || error "Account '$ACCOUNT' did not pass the check (should be 6 chars long with no s_ prefix)"
BUFFER="${BUFFER#$MODE$ACCOUNT}"
ACCOUNT="s_$ACCOUNT"
unset CLIENT_ID
[ "${BUFFER:0:1}" == ':' ] && CLIENT_ID="${BUFFER#:}"
[ -n "$CLIENT_ID" ] || error "No client ID was provided!"

# === Locking part A starts  ===
CONFFILE="${HTTPD_CONFFILE%/*}/svn-clients.map"
LOCKFILE="$CONFFILE.lock"
DEADLOCK_TIME=600
RESULT=255
LOCK_TRIES=0

while [ $LOCK_TRIES -le 10 ]; do
if ln -s "$CONFFILE" "$LOCKFILE" &>/dev/null ; then
        trap 'rm "$LOCKFILE" ; trap - EXIT ; exit 255' HUP INT QUIT ABRT KILL SEGV PIPE
        trap 'rm "$LOCKFILE" ; trap - EXIT ; exit $RESULT' EXIT
# === Locking part A ends  ===
case "$MODE" in
	'+')
		if ! LAST_PORT=$(cat $LAST_PORT_FILE 2>/dev/null); then
			if [ ! -e "$LAST_PORT_FILE" ]; then
				LAST_PORT="${SVN_START_PORT:-5000}"
			else
				error "Could not determine the port to use"
			fi
		fi
		[ -z "${LAST_PORT//[[:digit:]]}" -a $LAST_PORT -gt 1024 ] || error "Invalid port number was retrieved from the config files"
		LAST_PORT=$(($LAST_PORT + 1))

		/usr/sbin/useradd -m -s /bin/false -d "$SVN_HOME/$ACCOUNT" "$ACCOUNT" ||
			error "Cannot add account '$ACCOUNT'"

		su - -s /bin/bash -c "\
			set -e
			mkdir ~/etc ~/repos ~/public_html
			ln -s ~/etc/authz .svn_access
			ln -s ~/etc/passwd .svn_passwd
			touch ~/etc/passwd
			cat << EOF > ~/etc/authz
[/]
\\\$authenticated = rw
* =
EOF
" "$ACCOUNT" ||	error "Error configuring account '$ACCOUNT'"
		[ -d "$HTTPD_LOGDIR_ABS/repos" ] || mkdir -m711 "$HTTPD_LOGDIR_ABS/repos" || error "Cannot create '$HTTPD_LOGDIR_ABS/repos'"
		mkdir -m0750 "$HTTPD_LOGDIR_ABS/repos/$ACCOUNT" || error "Cannot create '$HTTPD_LOGDIR_ABS/repos/$ACCOUNT'"
		chown -h "root:$ACCOUNT" "$HTTPD_LOGDIR_ABS/repos/$ACCOUNT" || warning "Failed to chown '$HTTPD_LOGDIR_ABS/repos/$ACCOUNT' to root:$ACCOUNT"
		touch "$HTTPD_LOGDIR_ABS/repos/$ACCOUNT/"{access,error}_log
		chmod 0644 "$HTTPD_LOGDIR_ABS/repos/$ACCOUNT/"{access,error}_log
		if ! sed "
s#@@ACCOUNT@@#$ACCOUNT#g;
s#@@CLIENT_ID@@#$CLIENT_ID#g;
s#@@PORT@@#$LAST_PORT#g;
s#@@HOME_DIR@@#$SVN_HOME/$ACCOUNT#g;
s#@@LOG_DIR@@#$HTTPD_LOGDIR/repos/$ACCOUNT#g;
" "${HTTPD_CONFFILE%/*}/repos/.template.conf" > "${HTTPD_CONFFILE%/*}/repos/$ACCOUNT.conf"; then
			rm -f -- "${HTTPD_CONFFILE%/*}/repos/$ACCOUNT.conf"
			error "Could not create the Apache configuration for account '$ACCOUNT'"
		fi
		echo -n "$LAST_PORT" > "$LAST_PORT_FILE"
		if [ -s "${HTTPD_CONFFILE%/*}/svn-clients.map" ]; then
			sed -i 's,^\([[:space:]]*\)'"$CLIENT_ID"'\([[:space:]]\+\)[^[:space:]]\+,\1'"$CLIENT_ID"'\2127.0.0.1:'"$LAST_PORT"',; t; $a \'"$CLIENT_ID"'	127.0.0.1:'"$LAST_PORT" "${HTTPD_CONFFILE%/*}/svn-clients.map"
		else
			echo "$CLIENT_ID	127.0.0.1:$LAST_PORT" >> "${HTTPD_CONFFILE%/*}/svn-clients.map"
			chmod 0644 "${HTTPD_CONFFILE%/*}/svn-clients.map"
		fi
		/sbin/service httpd-svn check "$ACCOUNT" &>/dev/null || error "A test for the configuration sanity failed!"
		/sbin/service httpd-svn start "$ACCOUNT" &>/dev/null || error "Failed to start the SVN instance for account '$ACCOUNT'"
		echo OK
		RESULT=0
		;;
	'-')
		getent passwd "$ACCOUNT" &>/dev/null || error "System account '$ACCOUNT' does not seem to exist"
		sed -i '/^[[:space:]]*'"$CLIENT_ID"'[[:space:]]/d' "${HTTPD_CONFFILE%/*}/svn-clients.map" || error "Could not remove the client entry from svn-clients.map"
		/sbin/service httpd-svn stop "$ACCOUNT" || error "Failed to stop the SVN instance for account '$ACCOUNT'"
		rm -f -- "${HTTPD_CONFFILE%/*}/repos/$ACCOUNT.conf"
		rm -rf -- "${HTTPD_LOGDIR_ABS}/repos/$ACCOUNT"
		/usr/sbin/userdel -r "$ACCOUNT" || error "Failed to remove system account '$ACCOUNT'"
		RESULT=0
		echo OK
		;;
	*)
		error "Unimplemented mode '$MODE' was specified"
		;;
esac
exit
# === Locking part B starts  ===
else
        if [ -h "$LOCKFILE" ]; then
                CURRENT_TIME=$(date +%s)
                LOCKFILE_MTIME=$(stat --format=%Y "$LOCKFILE")
		[ -n "$LOCKFILE_MTIME" ] || error "Failed to stat lock file '$LOCKFILE'"
		if [ $(($CURRENT_TIME - $LOCKFILE_MTIME)) -gt $DEADLOCK_TIME ]; then
			warning "Lockfile '$LOCKFILE' looks too old (more than $DEADLOCK_TIME seconds), removing"
			rm -f -- "$LOCKFILE"
		fi
	fi
	LOCK_TRIES=$(($LOCK_TRIES + 1))
fi
# === Locking part B ends  ===
done
