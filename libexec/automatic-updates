#!/bin/bash

# This script is made to enable and disable automatic system backups
# Use this at your own risk

# Keep in mind that some programs may break due to unexpected updates or changes in the libraries
UPDATEPATH="/etc/cron.daily/automatic-updates"

usage(){
echo "
This script is made to enable and disable automatic system backups
Keep in mind that some programs may break due to unexpected updates or changes in the libraries
Use this at your own risk
Usage: 
To turn on automatic updates  - ./automatic-updates on  
To turn off automatic updates - ./automatic-updates off
"
}

# Turn on Updates doing some validations for ubuntu and centos or rhel based distributions
autoupdatesOn(){
echo "
#!/bin/bash

AUTOMATICLOGS=\"/var/log/automatic-updates.log\"
#function to detect OS
devpanel_auto_detect_distro() {
  local distro=\"\"

  # can't use local -l below because of systems with bash 3
  local lsb_distro_str=\"\" lsb_distro_raw=\"\"

  if hash lsb_release &>/dev/null; then
    lsb_distro_raw=`lsb_release -si 2>/dev/null`
    lsb_distro_str=`\echo -n \"$lsb_distro_raw\" | tr A-Z a-z`
  fi

  if [ -n \"\$lsb_distro_str\" ]; then
    distro=\"\$lsb_distro_str\"
  elif [ -r /etc/debian_version ] && apt-cache show lsb-base | egrep -q '^Maintainer: .+debian\.org>'; then
    distro=debian
  elif [ -r /etc/debian_version ] && apt-cache show lsb-base | egrep -q '^Maintainer: .+ubuntu\.com>'; then
    distro=ubuntu
  elif hash rpm &>/dev/null && rpm -ql centos-release &>/dev/null; then
    distro=centos
  elif hash rpm &>/dev/null && rpm -ql redhat-release-server &>/dev/null; then
    distro=redhat
  elif hash rpm &>/dev/null && rpm -ql owl-hier >/dev/null 2>&1; then
    distro=owl
  elif [[ \"\$OSTYPE\" =~ ^darwin ]]; then
    distro=macosx
  fi

  if [ -n \"\$distro\" ]; then
    echo \"\$distro\"
    return 0
  else
    return 1
  fi
}
# Call function to detect OS 
DEVPANELOS=\$(devpanel_auto_detect_distro)
# Add date to logfile
echo \"###############################################\" >> \$AUTOMATICLOGS; date +%y-%m-%d >> \$AUTOMATICLOGS
# Validation for ubuntu
if [ \"\$DEVPANELOS\" == \"ubuntu\" ];then
        apt-get update -y >> \$AUTOMATICLOGS; apt-get upgrade --assume-yes >> \$AUTOMATICLOGS
# Validation for Debian
elif [ \"\$DEVPANELOS\" == \"debian\" ];then
        apt-get update -y >> \$AUTOMATICLOGS; apt-get upgrade --assume-yes >> \$AUTOMATICLOGS
# Validation for rhel/cenOS
elif [ \"\$DEVPANELOS\" == \"centos\" ] || [ \"\$DEVPANELOS\" == \"redhat\" ];then
        yum update -y >> \$AUTOMATICLOGS
else
        echo \"Could not detect OS\"
        exit 1
fi
" > $UPDATEPATH
chmod +x $UPDATEPATH
echo "Automatic updates ON"
}

autoupdatesOff(){
rm -f $UPDATEPATH
echo "Automatic updates OFF"
}

case  $1  in
        on)       
                autoupdatesOn
                ;;
        off)
                autoupdatesOff
                ;;            
        h|help)       
                usage
                ;;
        *)
                usage              
esac
