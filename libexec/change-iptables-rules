#!/bin/bash

###########################  README!!!! ###############################
# This script is used to change the iptables rules based on a file you give
# You can only define the inbound connections on the file you give.
# This is the format you have to use INSIDE the file
#
# iptables -A INPUT -p tcp --dport 22 -j ACCEPT
#
# The only variable you will need to change is the port, but you need to specify these line
# You can have several lines per file
# If you want to open port 80, you will need to add these rule
#
# iptables -A INPUT -p tcp --dport 80 -j ACCEPT
######################################################################

# Define variables for binaries

#IPT="/sbin/iptables"
#IPTS="/sbin/iptables-save"
#IPTR="/sbin/iptables-restore"
IPT=$(which iptables)
IPTS=$(which iptables-save)
IPTR=$(which iptables-restore)

# Check if binaries exist in the system
command -v $IPT >/dev/null 2>&1 || { echo "You need iptables to run this script" >&2; exit 1; }
command -v $IPTS >/dev/null 2>&1 || { echo "You need iptables-save to execute this script" >&2;  exit 1; }
command -v $IPTR >/dev/null 2>&1 || { echo "You need iptables-restore to execute this script" >&2;  exit 1; }
command -v curl >/dev/null 2>&1 || { echo "You need curl to execute this script" >&2;  exit 1; }

# Usage method
usage(){
echo "This script is used to define iptables rules based on a file that the front-end gives
Usage:
        -h      show this help message
        -H      show extended usage
        -F      flush all the rules
        -I      Import an specified file
                Example: $0 -I /tmp/rules.txt
"
exit 1
}

# Extended usage method
extusage(){
echo " This script is used to change the iptables rules based on a file you give
You can only define the inbound connections on the file you give.
This is the format you have to use INSIDE the file

iptables -A INPUT -p tcp --dport 22 -j ACCEPT

The only variable you will need to change is the port, but you need to specify these line
You can have several lines per file
If you want to open port 80, you will need to add these rule

iptables -A INPUT -p tcp --dport 80 -j ACCEPT
"
exit 1
}

# Conditional to see if the user is root
if  [ $UID != 0 ];then
        echo "You should be root to run this script!"
        usage
        exit 1;
fi

# Main method to import the rules from the given file
importrules(){
# Get SSH port
RULESBACKUP=$(mktemp)

if [ -z "$RULESFILE" ];then
        echo "$RULESFILE does not exist"
        exit 1
fi

$IPTS > $RULESBACKUP

if [ ! -f $RULESBACKUP ];then
        echo "Backup files does not exist. Exit with error"
        exit 1
fi

# Flush rules and Change default action to DROP
$IPT -t filter -F
$IPT -t filter -X
$IPT -P INPUT ACCEPT
$IPT -P FORWARD ACCEPT
$IPT -P OUTPUT ACCEPT
$IPT -I INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

# Enable use of loopback interfaces
$IPT -A INPUT -i lo -j ACCEPT
$IPT -A OUTPUT -o lo -j ACCEPT

# All TCP sessions should begin with SYN
$IPT -A INPUT -p tcp ! --syn -m state --state NEW -s 0.0.0.0/0 -j DROP

# Accept inbound TCP packets
$IPT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# Accept outbound packets
$IPT -I OUTPUT 1 -m state --state RELATED,ESTABLISHED -j ACCEPT

# Accept PING from all sources
$IPT -A OUTPUT -p icmp --icmp-type echo-request -j ACCEPT
$IPT -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT

# Conditional to open SSH PORT
SSHPORT=$(cat /etc/ssh/sshd_config |grep  ^Port |awk '{print $2}')
re='^[0-9]+$'

if [ -z "$SSHPORT" ];then
        $IPT -A INPUT -p tcp --dport 22 -j ACCEPT
elif [[ $SSHPORT =~ $re ]];then
        $IPT -A INPUT -p tcp --dport $SSHPORT -j ACCEPT
else
true
fi
# Open port for zabbix monitoring
$IPT -A INPUT -p tcp --dport 10050 -j ACCEPT

# Read rules from a given file
while read line;  do $line; done < $RULESFILE
$IPTS

$IPT -A INPUT -j DROP
# Check the connection with the world, if it fails then the rules will be cleaned
RESPONSE=$(curl -s --head -w %{http_code} http://controller.devpanel.com/ -o /dev/null)

if [[ $RESPONSE == "200" ]]; then
        exit 0
else
        echo "Offline"
        $IPTR < $RULESBACKUP
        exit 1;
fi
}

# Clean rules and accept all traffic by default

flushrules(){
$IPT -F
$IPT -X
$IPT -t nat -F
$IPT -t nat -X
$IPT -t mangle -F
$IPT -t mangle -X
$IPT -P INPUT ACCEPT
$IPT -P FORWARD ACCEPT
$IPT -P OUTPUT ACCEPT
$IPTS
echo "Iptables rules cleaned"
exit 0
}

# Parse options
[ $# -eq 0 ] && usage
while getopts ":FHI:" opt ; do
  case $opt in
    F)
        flushrules
        ;;
    I)
        RULESFILE="$OPTARG"
        importrules
        ;;
    H)
        extusage
        ;;

    *)
        usage
        ;;
  esac
done
