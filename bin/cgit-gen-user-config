#!/bin/bash

usage() {
  local prog=`basename "$0"`

  echo "Usage: $prog <user>"
  exit 1
}

error() {
  local msg="$1"
  local exit_code="${2:-1}"

  [ -n "$msg" ] && echo "Error: $msg" 1>&2
  exit $exit_code
}

warn() {
  local msg="$1"

  echo "Warning: $msg" 1>&2
}

# main

[ $# -lt 1 -o -z "$1" ] && usage

dir=`dirname "$0"`
we_base_dir=`readlink -e "$dir/.."`
if [ $? -ne 0 -o -z "$we_base_dir" ]; then
  error "unable to detect current directory."
fi

gitolite_bin="$we_base_dir/bin/gitolite"
if [ ! -f "$gitolite_bin" -o ! -x "$gitolite_bin" ]; then
  error "unable to find $gitolite_bin"
fi

tmp_file=`mktemp tmp_cgitrc.XXXXXX`
if [ $? -ne 0 ]; then
  error "unable to create temporary file"
fi
trap 'exit 1' INT HUP TERM QUIT
trap 'rm -f "$tmp_file"' EXIT

user="$1"

gitolite_repos_dir=`$gitolite_bin query-rc GL_REPO_BASE`
if [ $? -ne 0 -o -z "$gitolite_repos_dir" ]; then
  error "unable to get gitolite variable ''"
elif [ ! -d "$gitolite_repos_dir" ]; then
  error "directory '$gitolite_repos_dir' doesn't exists"
fi

devpanel_dir="$HOME/.devpanel"

metadata_dir="$devpanel_dir/metadata"
if [ ! -d "$metadata_dir" ]; then
  echo "Warning: metadata dir '$metadata_dir' doesn't exist. Did nothing." 1>&2
  exit 0
fi

cgit_conf_dir="$devpanel_dir/cgit"
if [ ! -d "$cgit_conf_dir" ] && ! mkdir -m 700 "$cgit_conf_dir"; then
  error "unable to create $cgit_conf_dir"
fi

echo "cache-dynamic-ttl=1" > "$tmp_file"
if [ $? -ne 0 ]; then
  error "unable to do initial write to tmp file '$tmp_file'"
fi

declare -i n_repos=0
for hint_file in "$metadata_dir/config:permissions:User:$user:Repo:"*; do
  tmp_basename=`basename "$hint_file"`

  [ "$tmp_basename" == "config:permissions:User:$user:Repo:*" ] && break

  repo_name="${tmp_basename##*:}"

  repo_dir="$gitolite_repos_dir/$repo_name.git"
  if [ ! -e "$repo_dir" ]; then
    warn "path '$repo_dir' doesn't exist. Skipping repos $repo_name..."
    continue
  elif [ ! -d "$repo_dir" ]; then
    warn "path '$repo_dir' is not a directory. Skipping repos $repo_name..."
    continue
  fi

  printf "repo.url=%s\nrepo.path=%s\n\n" "$repo_name" "$repo_dir" >>"$tmp_file"
  if [ $? -eq 0 ]; then
    n_repos+=1
  else
    error "unable to write to temp file '$tmp_file'"
  fi
done

if [ $n_repos -eq 0 ]; then
  echo "User is not part of any repos. Did nothing." 1>&2
  exit 0
fi

cgit_file="$cgit_conf_dir/cgit.user.$user.rc"

mv -f "$tmp_file" "$cgit_file"
if [ $? -eq 0 ]; then
  echo "Successfully applied changes for user $user, cgit file $cgit_file"
  exit 0
else
  error "unable to copy temp file to '$cgit_file'"
fi
