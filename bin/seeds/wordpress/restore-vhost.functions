wordpress_get_users() {
  sql_query_result "select user_login from wp_users where user_login <> ''"
}

wordpress_genpass() {
  "$dir/genpass"
}

wordpress_encrypt() {
  local password="$1"
  echo -n "$password"|"$dir/wordpress-crypt.php"
}

wordpress_set_password() {
  local user="$1"
  local encrypted_password="$2"
  local salt

  sql_query "update wp_users set user_pass = '$encrypted_password' where user_login = '$user';"
}

wordpress_set_email() {
  local user="$1"
  local email="$2"

  sql_query "update wp_users set user_email = '$email' where user_login = '$user';"
  sql_query "update wp_options set option_value='$email' where option_name='admin_email'"
}

wordpress_get_email() {
  local user="$1"

  sql_query_result "select user_email from wp_users where user_login = '$user'"
}

wordpress_get_admin_user() {
  sql_query_result "select user_login from wp_users where user_login = 'admin'"
}

wordpress_set_sitename()
{
   sql_query "update wp_options set option_value='http://$fqdn' where option_name='siteurl'" || return 1
   sql_query "update wp_options set option_value='http://$fqdn' where option_name='home'" || return 1
}

wordpress_update_define_line() {
  # update lines containing: define('key', 'value');  with the new values
  local key="$1"
  local value="$2"

  local key_esc=$(escape_sed "$key")
  local value_esc=$(escape_sed "$value")

  local sed_str="s/define([[:space:]]*['\"]$key_esc['\"][[:space:]]*,[[:space:]]*['\"][^'\"]\+['\"][[:space:]]*)[[:space:]]*\;/define('$key_esc', '$value_esc')\;/g;"

  printf '%s' "$sed_str"
}

wordpress_update_php_config()
{

  local sed_str="" key="" value=""
  if [ -n "$initial_deployment" ]; then
    local AUTH_KEY=$(wedp_gen_random_str 64)
    local SECURE_AUTH_KEY=$(wedp_gen_random_str 64)
    local LOGGED_IN_KEY=$(wedp_gen_random_str 64)
    local NONCE_KEY=$(wedp_gen_random_str 64)
    local AUTH_SALT=$(wedp_gen_random_str 64)
    local SECURE_AUTH_SALT=$(wedp_gen_random_str 64)
    local LOGGED_IN_SALT=$(wedp_gen_random_str 64)
    local NONCE_SALT=$(wedp_gen_random_str 64)

    local key
    for key in AUTH_KEY SECURE_AUTH_KEY LOGGED_IN_KEY NONCE_KEY \
               AUTH_SALT SECURE_AUTH_SALT LOGGED_IN_SALT NONCE_SALT; do
      value="${!key}"
      sed_str+=$(wordpress_update_define_line "$key" "$value")
    done
  fi

  local DB_USER="$mysql_user"
  local DB_PASSWORD="$mysql_password"
  local DB_HOST="$mysql_host:$mysql_port"
  local DB_NAME="$hosting_database"

  for key in DB_USER DB_HOST DB_NAME DB_PASSWORD; do
    value="${!key}"
    sed_str+=$(wordpress_update_define_line "$key" "$value")
  done

  echo "$sed_str" | run_ised "$home/public_html/$vhost/wp-config.php"
}

wordpress_set_upload_path()
{
  sql_query "update wp_options set option_value = '$home/public_html/$vhost/wp-content/uploads' where option_name = 'upload_path'" || return 1
}

wordpress_disable_canonical_redirects()
{
  echo "Updating siteurl and home option values"
  sql_query "update wp_options set option_value='/' where option_name='siteurl'"
  sql_query "update wp_options set option_value='/' where option_name='home'"
}


wordpress_custom() {
  if [ -z "$opt_n" ]; then
    echo "Setting site URL"
    wordpress_set_sitename || error "Cannot set sitename"
  fi

  echo "Deactivating default port forwarding"
  wordpress_disable_canonical_redirects || error "Can not disable canonical redirects"

  echo "Updating wp-config.php"
  wordpress_update_php_config || error "Cannot update wp-config.php"

  echo "Setting upload path"
  wordpress_set_upload_path || error "Cannot set upload path"
}


